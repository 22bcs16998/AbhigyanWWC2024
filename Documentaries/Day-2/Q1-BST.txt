#include <iostream>

using namespace std;

struct TreeNode {
    int val;
    TreeNode* left;
    TreeNode* right;
    TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};

// Function to convert sorted array to BST
TreeNode* sortedArrayToBST(int nums[], int start, int end) {
    if (start > end) return NULL;

    int mid = start + (end - start) / 2;  // Avoid overflow
    TreeNode* root = new TreeNode(nums[mid]);

    root->left = sortedArrayToBST(nums, start, mid - 1);
    root->right = sortedArrayToBST(nums, mid + 1, end);

    return root;
}

// Function to print the BST in-order
void printBST(TreeNode* root) {
    if (root == NULL) return;
    printBST(root->left);  // Visit left subtree
    cout << root->val << " ";  // Print current node
    printBST(root->right);  // Visit right subtree
}

// Example usage
int main() {
    int nums[] = {-10, -3, 0, 5, 9};
    int size = sizeof(nums) / sizeof(nums[0]);
    TreeNode* bstRoot = sortedArrayToBST(nums, 0, size - 1);

    cout << "In-order traversal of the BST: ";
    printBST(bstRoot);  // Print the BST
    cout << endl;

    return 0;
}
